name: CI

permissions:
  contents: write

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  validate:
    name: Test and Validate Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn

      - name: Run tests
        run: yarn test

      - name: Clean, build, format, lint, and package
        run: yarn all

      - name: Check if packaged properly
        run: |
          # If there are any unstaged or untracked files in 'dist/', then the action wasn't packaged properly
          if git diff --name-only | grep '^dist/' || git ls-files --other --exclude-standard | grep '^dist/'; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "halaslabs@users.noreply.github.com"
            git add dist/
            git commit -m "Update dist files [skip ci]"
            git push
          fi

  integration-test:
    name: Run Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: defaults
        name: Run with defaults
        uses: ./

      - name: Output default
        run: |
          echo 'steps.defaults.outputs.all=${{ steps.defaults.outputs.all }}'
          echo 'steps.defaults.outputs.added=${{ steps.defaults.outputs.added }}'
          echo 'steps.defaults.outputs.modified=${{ steps.defaults.outputs.modified }}'
          echo 'steps.defaults.outputs.removed=${{ steps.defaults.outputs.removed }}'
          echo 'steps.defaults.outputs.renamed=${{ steps.defaults.outputs.renamed }}'
          echo 'steps.defaults.outputs.added_modified=${{ steps.defaults.outputs.added_modified }}'

      - id: csv
        name: Run with csv format
        uses: ./
        with:
          format: csv

      - name: Output csv
        run: |
          echo 'steps.csv.outputs.all=${{ steps.csv.outputs.all }}'
          echo 'steps.csv.outputs.added=${{ steps.csv.outputs.added }}'
          echo 'steps.csv.outputs.modified=${{ steps.csv.outputs.modified }}'
          echo 'steps.csv.outputs.removed=${{ steps.csv.outputs.removed }}'
          echo 'steps.csv.outputs.renamed=${{ steps.csv.outputs.renamed }}'
          echo 'steps.csv.outputs.added_modified=${{ steps.csv.outputs.added_modified }}'

      - id: filter
        name: Run with filter
        uses: ./
        with:
          path-filters: |
            /.github/
            __tests__/**

      - name: Output filter
        run: |
          echo 'steps.filter.outputs.all=${{ steps.filter.outputs.all }}'
          echo 'steps.filter.outputs.added=${{ steps.filter.outputs.added }}'
          echo 'steps.filter.outputs.modified=${{ steps.filter.outputs.modified }}'
          echo 'steps.filter.outputs.removed=${{ steps.filter.outputs.removed }}'
          echo 'steps.filter.outputs.renamed=${{ steps.filter.outputs.renamed }}'
          echo 'steps.filter.outputs.added_modified=${{ steps.filter.outputs.added_modified }}'
